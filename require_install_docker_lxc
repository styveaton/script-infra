tokm sonarqube wallet.com (squ_8c37a537c7b75194463b933ac41aad1415eb63a8) name jenkins


seup k8s to lxc container

https://www.youtube.com/watch?v=XQvQUE7tAsk (https://github.com/styveaton/kubernetes_lxc.git)

to install docker in lxc container add this config on the lxc container befor install docker
  
  sudo lxc config set sonarqube security.nesting=true
  
sudo lxc config set sonarqube security.nesting=true
security.privileged: "true"
sudo lxc config set sonarqube security.privileged=true
sudo lxc config set k8s-worker-2 security.privileged=true
sudo lxc config set k8s-master-1 security.privileged=true
sudo lxc config set k8s-master-1 linux.kernel_modules =bridge,br_netfilter,x_tables,ip_tables,ip_vs,ip_set,ipip,xt_mark,xt_multiport,ip_tunnel,tunnel4,netlink_diag,nf_conntrack,nfnetlink,overlay
linux.kernel_modules: br_netfilter
sudo lxc config set  nginx-proxy-manager  linux.kernel_modules=br_netfilter
'
10.64.120.182

ansible-playbook  -i /opt/docker/hosts /opt/docker/ansible--devops-deployement.yml --limit 10.64.120.23;
ansible-playbook  -i /opt/docker/hosts /opt/docker/ansible--devops-deployement.yml --limit 10.64.120.182;
@123456?


lxc config device add non-container port80 proxy listen=tcp:0.0.0.0:80 connect=tcp:127.0.0.1:80
lxc config device add nom-container  port81 proxy listen=tcp:0.0.0.0:81 connect=tcp:127.0.0.1:81
lxc config device add nginx-proxy-manager  port443 proxy listen=tcp:0.0.0.0:443 connect=tcp:127.0.0.1:443

//allow lxd network interface 

sudo ufw allow in on lxdbr0
sudo ufw route allow in on lxdbr0
sudo ufw route allow out on lxdbr0


/// link install GUI lxc 
https://www.youtube.com/watch?v=FVL1y-sy9mY

 apt-get update && apt-get install nginx php-fpm php-curl s 
 wget https://github.com/lxdware/lxd-dashboard/archive/v3.7.0.tar.gz
  sudo tar -xzf v3.7.0.tar.gz
   sudo cp -a lxd-dashboard-3.7.0/default /etc/nginx/sites-available/
    sudo cp -a lxd-dashboard-3.7.0/lxd-dashboard/ /var/www/html/
     sudo mkdir -p /var/lxdware/data/sqlite
      sudo mkdir -p /var/lxdware/data/lxd
       sudo mkdir -p /var/lxdware/backups
       sudo chown -R www-data:www-data /var/lxdware/
       sudo chown -R www-data:www-data /var/www/html
       
        lxc network forward create lxdbr0 10.0.0.200 (host)
        lxc network forward port add lxdbr0 10.0.0.200 tcp 8080 10.135.228.191(lxc container) 80
        
        go there sudo nano /etc/nginx/sites-available/default

and uncommennt  fastcgi_pass unix:/run/php/php8.1-fpm.sock;
comment                 #fastcgi_pass unix:/run/php/php7.4-fpm.sock;

systemctl restart nginx


copy the certuificat and cree on the server host lxc container  lxdware.crt and paste the certifcate 
lxc config trust add lxdware.crt
 lxc config set core.https_address [::]




//NginX Proxy Manager and Local DNS
https://www.youtube.com/watch?v=26OF6_6i9bc

//Pi-hole setup ubuntu 22.04 | Network-wide protection for business and home
https://www.youtube.com/watch?v=awuqf9q3I3Q


//off swap 
 sudo swapoff -a


//fix this issues 

E0512 13:52:05.031455   48646 memcache.go:265] couldn't get current server API group list: Get "http://localhost:8080/api?timeout=32s": dial tcp 127.0.0.1:8080: connect: connection refused
E0512 13:52:05.032718   48646 memcache.go:265] couldn't get current server API group list: Get "http://localhost:8080/api?timeout=32s": dial tcp 127.0.0.1:8080: connect: connection refused
E0512 13:52:05.033255   48646 memcache.go:265] couldn't get current server API group list: Get "http://localhost:8080/api?timeout=32s": dial tcp 127.0.0.1:8080: connect: connection refused


//Mr Devops tuto
https://www.youtube.com/watch?v=8KZi7KBpk0I

sudo -i
swapoff -a
exit
strace -eopenat kubectl version


https://github.com/vikash-kumar01 (backup all his repository and ry to do that myself)

/// installll jasper report

https://www.golinuxcloud.com/install-jasperreports-server/


sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw allow ssh


open all rabbit port 

sudo ufw allow 5672/tcp && \
sudo ufw allow 15672/tcp && \
sudo ufw allow 25672:35672/tcp && \
sudo ufw allow 61613/tcp && \
sudo ufw allow 1883/tcp && \
sudo ufw allow 15675/tcp

